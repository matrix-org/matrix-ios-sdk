# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

default_platform(:ios)

platform :ios do

  #### Pod ####

  desc "Lint all podspecs"
  lane :lint_pods do
    lint_pod_MatrixSDK
  end

  desc "Lint MatrixSDK podspec"
  lane :lint_pod_MatrixSDK do
    # Use Debug config to divide build time by 3
    custom_pod_lib_lint(podspec: "../MatrixSDK.podspec", parameters: ["--allow-warnings", "--fail-fast", "--configuration=Debug"])
  end

  desc "Push all pods"
  lane :push_pods do
    push_pod_MatrixSDK
  end

  desc "Push MatrixSDK pod"
  lane :push_pod_MatrixSDK do
    pod_push(path: "MatrixSDK.podspec", allow_warnings: true)
  end

  #### Build ####

  desc "Ensure the iOS framework builds"
  lane :build_ios do
    build_scheme(scheme: "MatrixSDK-iOS", destination: "generic/platform=iOS Simulator")
  end

  desc "Ensure the macOS framework builds"
  lane :build_macos do
    build_scheme(scheme: "MatrixSDK-macOS", destination: "generic/platform=macOS")
  end

  desc "Send code to SonarCloud for analysis"
  lane :sonarcloud do |options|
    sonar(
      project_key: "matrix.ios.sdk",
      project_name: "Matrix iOS SDK",
      branch_name: ENV["BUILDKITE_BRANCH"],
      sonar_organization: "new_vector_ltd_organization",
      sonar_url: "https://sonarcloud.io",
      sonar_login: ENV["SONAR_LOGIN"],
      sources_path: File.expand_path("../MatrixSDK") + "," + File.expand_path("../MatrixSDKExtensions"),
      sonar_runner_args: "-Dsonar.cfamily.build-wrapper-output=build_wrapper_output -Dsonar.cfamily.threads=4 -Dsonar.cfamily.cache.enabled=true -Dsonar.cfamily.cache.path=sonar_cfamily_cache"
    )
  end

  #### Tests ####

  desc "Run tests. By default, it runs all tests. Most are integration tests. Be sure to set up the homeserver before like described here https://github.com/matrix-org/matrix-ios-sdk#tests"
  desc "Use 'testplan:UnitTests' to run only unit tests"
  lane :test do |options|
    cocoapods

    scan(
      workspace: "MatrixSDK.xcworkspace",
      scheme: "MatrixSDK-macOS",
      testplan: options[:testplan],
      configuration: "Debug",
      clean: true,
      code_coverage: true,
      # Test result configuration
      result_bundle: true,
      output_directory: "./build/test",
      open_report: !is_ci?
    )
  end


  #### Private ####

  desc "Just build the provided :scheme / :destination (without doing any xcarchive)"
  private_lane :build_scheme do |options|
    cocoapods

    gym(
      workspace: "MatrixSDK.xcworkspace",
      scheme: options[:scheme],
      skip_package_ipa: true,
      skip_archive: true,
      derived_data_path: "./DerivedData",
      destination: options[:destination],
    )
  end

  desc "Returns bundle Cocoapods version"
  private_lane :cocoapods_version do
    sh("bundle exec pod --version", log: false)
  end

  desc "Pod lib lint with podspec parameter"
  private_lane :custom_pod_lib_lint do |options|
    puts "Lint pod " << options[:podspec] << " with Cocoapods version " << cocoapods_version

    command = []
    command << "bundle exec pod lib lint"
    command << options[:podspec]

    if options[:parameters]
      command.concat(options[:parameters])
    end

    sh(command.join(" "))
  end
end
