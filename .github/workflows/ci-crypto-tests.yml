name: Crypto Tests CI

on:
  # Triggers the workflow on any pull request and push to develop
  push:
    branches: [ develop ]
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  crypto-tests:
    name: Crypto Tests with Synapse
    runs-on: macos-11

    concurrency:
      # When running on develop, use the sha to allow all runs of this workflow to run concurrently.
      # Otherwise only allow a single run of this workflow on each branch, automatically cancelling older runs.
      group: ${{ github.ref == 'refs/heads/develop' && format('crypto-develop-{0}', github.sha) || format('crypto-{0}', github.ref) }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v2

      # Cache for python env for Synapse
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      # Cache for Xcode env
      - uses: actions/cache@v2
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Start synapse server
        uses: michaelkaye/setup-matrix-synapse@v1.0.3
        with:
          uploadLogs: true
          httpPort: 8080
          disableRateLimiting: true

      - name: Bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      # Main step
      - name: Crypto tests
        run: bundle exec fastlane test testplan:CryptoTests

      # Store artifacts
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: report.html
          path: build/test/report.html
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: report.junit
          path: build/test/report.junit
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: MatrixSDK-macOS.xcresult
          path: build/test/MatrixSDK-macOS.xcresult/

      # Upload coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
